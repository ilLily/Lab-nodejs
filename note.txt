Notes

LAB 2023 06 05~ 2023 06 16

==CJS(2009)==
export: module.exports
import: require('./') => ./folder/file 若副檔名是js檔或json檔，就可省略。兩者同時有，js優先


==MJS(2015) or ESM== 使用ES6的module
export: export
import: import {} from "./~~.js" =>副檔名一定要加！！
* 若CJS 跟 ESM 混用的時候，ESM的副檔名要改 .msj


==package.json==
* 專案預設會是CJS，若整個專案要改ESM，在package.json加入 "type":"module"
* dependencies, 會展示目前專案安裝的所有packages
* scripts裡面，可以設定 npm 的 params 
    {1: 只有start, test, 可以直接用 npm start/ npm test 呼叫,
    2: 其它的key，都要用npm run key來呼叫}


==============npm global install=====================
1. npm i -g nodemon （啓動node）
適合開發環境用
(global package, run node. but do not need to restart everytime something change in the project)


2. npm i -g pm2 （啓動node）
適合正式環境用
pm2 start filename
pm2 status(can check status ex:online)
pm2 restart 0
pm2 stop 0
pm2 del 0


==============npm project install===================
1. npm i express 
用法： 
const express = require('express')
const app = express();
app.get('/', (req,res)=>{
    res.send()
    req.params()
})
app.listen(port,()=>{
    console.log('start server, listening on port:...)
})

2. npm i dotenv
用法： require('dotenv).config();=>會自動找.env檔
    require('dotenv').config({
        path: __dirname + '/production.env'
    });=>會透過路徑去找相對的env檔

__dirname, 是CJS專有的變數，ESM沒有

3. npm i ejs
用法： app.set('view engine', 'ejs');

4. npm i multer
用法： MidedleWave upload.array("欄位name", 最大上傳數), upload.single("欄位name")

5. npm i uuid
用法： uuid.v4() =>產生新的id

6. npm i express-session
7. npm i moment-timezone
8. npm i dayjs
9. mpn i mysql2

============== express app ==============
app.set()     // ejs-view engine
app.use()     // MW:express.urlencoded 解釋body, MW:express.json() , express.static(), 404,
app.get() 
app.post()
app.listen()  // port

============== res ==============
res.end()      // 原生node http 的方法,  express 比較少用
res.send()     //head(text/html, text/plain, application/json..... )
res.json()     //head(application/json)
res.render()   //head(text/html) 
res.redirect() //沒有contentType
*以上幾個，在一個回應裡不可重覆用，除非在if else conditional situation
*以上幾個都會自動設head, 做完也自動break

res.type() //Content-type
res.status() // 200,404
res.locals
============== req ==============
req.query       // get queryString 
req.params      // 拿到路徑參數 => OBJECT path parameters
req.url         // ex: xxx.get('/aaa',(req,res)=>{})        //aaa
req.baseUrl     // 
req.originalUrl //
req.files       // =>[obj,obj]
req.file        // =>object (fieldname:欄位name, originalname:上傳時的檔案全名，mimetype:副檔名，destination:存放位置，filename:存放時的檔名，path: 路徑，encoding，size)


============== RESTful path ==============
RESTful path
  POST
    /products     # 新增商品資料
  GET
    /products     # 取得列表資料
    /products/20  # 取得單項商品的資料
  PUT
    /products/20  # 修改單項商品的資料
  DELETE
    /products/20  # 刪除單項商品的資料


============== fs 套件 ============== 
fs.rename
fs.unlink

============== Header Content-Type ============== 
text/html
text/plain
text/css

application/json
application/xml
application/pdf
application/x-www-form-urlencoded (傳送'沒有'副檔名的Key-value pair)

multipart/form-data(傳送'有'副檔名的Key-value pair)

image/jpeg：JPEG 圖像。
image/png：PNG 圖像。

audio/mpeg：MPEG 音頻文件。
video/mp4：MP4 影片文件。

